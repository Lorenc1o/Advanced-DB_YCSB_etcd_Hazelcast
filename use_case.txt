we have:
	short light processes
	long light processes
	long heavy processes
	
	a workload of this processes
	
	a number of servers to handle the processes
	
	an orchestrator that sends processes to the servers
	
	a DB that keeps track of where is each process executing and information about processes and servers
	
algorithm orchestrator(workload, servers, DB):
begin
	for server in servers
	begin
		DB.insert(server.ID + 'capacity', server.capacity)
		DB.insert(server.ID + 'ocupation', 0)
	end
	
	parallel for process in workload
	begin
		serverID = DB.getSuitableServer(processID) #this searches for a server able to run the process with processID (server.capacity - server.ocupation > process.size) 
		new_ocupation = DB.read(server.ID + 'ocupation') + process.size
		DB.insert(process.ID + 'server', server.ID)
		DB.update(server.ID + 'ocupation', new_ocupation)
		
		wait(DB.length) #This simulates the execution of the process
		
		new_ocupation = DB.read(server.ID + 'ocupation') - process.size
		DB.update(server.ID + 'ocupation', new_ocupation)
		DV.delete(process.ID + 'server')
	end
end
